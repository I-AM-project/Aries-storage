{"ast":null,"code":"import _regeneratorRuntime from\"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";function readMyData(){return _readMyData.apply(this,arguments);}function _readMyData(){_readMyData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var parsedReults;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(\"Yoooo\");// const res = await fetch('/readMyData', {\n//     method: 'GET',\n//     headers: {\n//         'Content-Type': 'application/json',\n//         'Accept': 'application / json'\n//     },\n// })\n// let data = await res.json()\n// console.log(data)\nparsedReults=[];// if (data.length !== 0) {\n//     parsedReults.push({ \"Person\": data[0].Person.value })\n//     for (let result of data) {\n//         let dataHeader = \"\"\n//         for (let attribute in result) {\n//             if (attribute != \"Person\" && attribute != \"keyPairName\" && attribute != \"Signature\") {\n//                 dataHeader = attribute\n//             }\n//         }\n//         parsedReults.push({\n//             data: {\n//                 attribute: dataHeader,\n//                 value: result[dataHeader].value\n//             },\n//             signature: result.Signature.value,\n//             keyPairName: result.keyPairName.value\n//         })\n//     }\n// }\n// console.log(parsedReults)\nreturn _context.abrupt(\"return\",parsedReults);case 3:case\"end\":return _context.stop();}}},_callee);}));return _readMyData.apply(this,arguments);}export default readMyData;","map":{"version":3,"names":["readMyData","console","log","parsedReults"],"sources":["/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.jsx"],"sourcesContent":["async function readMyData() {\n    console.log(\"Yoooo\")\n    // const res = await fetch('/readMyData', {\n    //     method: 'GET',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'Accept': 'application / json'\n    //     },\n    // })\n\n    // let data = await res.json()\n    // console.log(data)\n    let parsedReults = []\n\n    // if (data.length !== 0) {\n    //     parsedReults.push({ \"Person\": data[0].Person.value })\n    //     for (let result of data) {\n    //         let dataHeader = \"\"\n    //         for (let attribute in result) {\n    //             if (attribute != \"Person\" && attribute != \"keyPairName\" && attribute != \"Signature\") {\n    //                 dataHeader = attribute\n    //             }\n    //         }\n    //         parsedReults.push({\n    //             data: {\n    //                 attribute: dataHeader,\n    //                 value: result[dataHeader].value\n    //             },\n    //             signature: result.Signature.value,\n    //             keyPairName: result.keyPairName.value\n\n    //         })\n    //     }\n    // }\n    // console.log(parsedReults)\n    return parsedReults\n}\n\nexport default readMyData"],"mappings":"4TAAeA,W,0IAAf,sJACIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACIC,YAZR,CAYuB,EAZvB,CAcI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAlCJ,gCAmCWA,YAnCX,wD,6CAsCA,cAAeH,WAAf"},"metadata":{},"sourceType":"module"}