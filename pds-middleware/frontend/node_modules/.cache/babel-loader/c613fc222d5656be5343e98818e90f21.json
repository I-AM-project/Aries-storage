{"ast":null,"code":"async function readMyData() {\n  const res = await fetch('/readMyData', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application / json'\n    }\n  });\n  let data = await res.json();\n  console.log(data);\n  let parsedReults = [];\n\n  if (data.length !== 0) {\n    parsedReults.push({\n      \"Person\": data[0].Person.value\n    });\n\n    for (let result of data) {\n      let dataHeader = \"\";\n\n      for (let attribute in result) {\n        if (attribute != \"Person\" && attribute != \"keyPairName\" && attribute != \"Signature\") {\n          dataHeader = attribute;\n        }\n      }\n\n      parsedReults.push({\n        data: {\n          attribute: dataHeader,\n          value: result[dataHeader].value\n        },\n        signature: result.Signature.value,\n        keyPairName: result.keyPairName.value\n      });\n    }\n  }\n\n  console.log(parsedReults);\n  return parsedReults;\n}\n\nexport default readMyData;","map":{"version":3,"names":["readMyData","res","fetch","method","headers","data","json","console","log","parsedReults","length","push","Person","value","result","dataHeader","attribute","signature","Signature","keyPairName"],"sources":["/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.jsx"],"sourcesContent":["async function readMyData() {\n    const res = await fetch('/readMyData', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application / json'\n        },\n    })\n\n    let data = await res.json()\n    console.log(data)\n    let parsedReults = []\n\n    if (data.length !== 0) {\n        parsedReults.push({ \"Person\": data[0].Person.value })\n        for (let result of data) {\n            let dataHeader = \"\"\n            for (let attribute in result) {\n                if (attribute != \"Person\" && attribute != \"keyPairName\" && attribute != \"Signature\") {\n                    dataHeader = attribute\n                }\n            }\n            parsedReults.push({\n                data: {\n                    attribute: dataHeader,\n                    value: result[dataHeader].value\n                },\n                signature: result.Signature.value,\n                keyPairName: result.keyPairName.value\n\n            })\n        }\n    }\n    console.log(parsedReults)\n    return parsedReults\n}\n\nexport default readMyData"],"mappings":"AAAA,eAAeA,UAAf,GAA4B;EACxB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;IACnCC,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,UAAU;IAFL;EAF0B,CAAhB,CAAvB;EAQA,IAAIC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAjB;EACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;EACA,IAAII,YAAY,GAAG,EAAnB;;EAEA,IAAIJ,IAAI,CAACK,MAAL,KAAgB,CAApB,EAAuB;IACnBD,YAAY,CAACE,IAAb,CAAkB;MAAE,UAAUN,IAAI,CAAC,CAAD,CAAJ,CAAQO,MAAR,CAAeC;IAA3B,CAAlB;;IACA,KAAK,IAAIC,MAAT,IAAmBT,IAAnB,EAAyB;MACrB,IAAIU,UAAU,GAAG,EAAjB;;MACA,KAAK,IAAIC,SAAT,IAAsBF,MAAtB,EAA8B;QAC1B,IAAIE,SAAS,IAAI,QAAb,IAAyBA,SAAS,IAAI,aAAtC,IAAuDA,SAAS,IAAI,WAAxE,EAAqF;UACjFD,UAAU,GAAGC,SAAb;QACH;MACJ;;MACDP,YAAY,CAACE,IAAb,CAAkB;QACdN,IAAI,EAAE;UACFW,SAAS,EAAED,UADT;UAEFF,KAAK,EAAEC,MAAM,CAACC,UAAD,CAAN,CAAmBF;QAFxB,CADQ;QAKdI,SAAS,EAAEH,MAAM,CAACI,SAAP,CAAiBL,KALd;QAMdM,WAAW,EAAEL,MAAM,CAACK,WAAP,CAAmBN;MANlB,CAAlB;IASH;EACJ;;EACDN,OAAO,CAACC,GAAR,CAAYC,YAAZ;EACA,OAAOA,YAAP;AACH;;AAED,eAAeT,UAAf"},"metadata":{},"sourceType":"module"}