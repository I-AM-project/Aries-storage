{"ast":null,"code":"var _jsxFileName = \"/Users/jeanaeclark/Documents/GitHub/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js\";\nimport * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreateNewDataForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      attribute: \"\",\n      value: \"\",\n      cert: \"\"\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n    this.getCertList = this.getCertList.bind(this);\n    this.getAttributeList = this.getAttributeList.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getAttributeList() {\n    let attrOptions = [];\n    attrOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Select An Attribute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }, this));\n\n    for (let attribute of this.props.attributes) {\n      attrOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: attribute,\n        children: attribute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 30\n      }, this));\n    }\n\n    return attrOptions;\n  }\n\n  getCertList() {\n    let certOptions = [];\n    certOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n      children: \"Select A Cert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 26\n    }, this));\n\n    for (let cert of this.props.certs) {\n      certOptions.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cert.keyPairName,\n        children: cert.keyPairName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 30\n      }, this));\n    }\n\n    return certOptions;\n  }\n\n  async handleSubmit() {\n    if (this.state.attribute != \"Select An Attribute\" && this.state.value != \"\" && this.state.cert != \"Select A Cert\") {\n      createMyData(this.props.person, this.state.attribute, this.state.value, this.state.cert, data => {\n        this.props.refreshData();\n      });\n    } else {\n      alert(\"Fill out all the fields\");\n    }\n  }\n\n  handleToggle() {\n    if (this.props.toggleAddData) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          padding: \"1rem\",\n          margin: \"1rem\",\n          backgroundColor: \"white\",\n          borderRadius: \".5rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicText\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"My Data Attribute\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: event => this.setState({\n                attribute: event.target.value\n              }),\n              \"aria-label\": \"Select An Attribute\",\n              children: this.getAttributeList()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicText\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Value\",\n              onChange: event => this.setState({\n                value: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicText\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Certificate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: event => this.setState({\n                cert: event.target.value\n              }),\n              \"aria-label\": \"Select A Cert\",\n              children: this.getCertList()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => this.handleSubmit(),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 20\n      }, this);\n    } else {\n      return \"\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.handleToggle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CreateNewDataForm;","map":{"version":3,"names":["React","Form","Button","Container","createMyData","CreateNewDataForm","Component","constructor","props","state","attribute","value","cert","handleToggle","bind","getCertList","getAttributeList","handleSubmit","attrOptions","push","attributes","certOptions","certs","keyPairName","person","data","refreshData","alert","toggleAddData","padding","margin","backgroundColor","borderRadius","event","setState","target","render"],"sources":["/Users/jeanaeclark/Documents/GitHub/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js"],"sourcesContent":["import * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\n\n\n\n\nclass CreateNewDataForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            attribute: \"\",\n            value: \"\",\n            cert: \"\"\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n        this.getCertList = this.getCertList.bind(this)\n        this.getAttributeList = this.getAttributeList.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    getAttributeList() {\n        let attrOptions = []\n        attrOptions.push(<option>Select An Attribute</option>)\n        for (let attribute of this.props.attributes) {\n            attrOptions.push(<option value={attribute}>{attribute}</option>)\n        }\n        return attrOptions\n    }\n\n    getCertList() {\n        let certOptions = []\n        certOptions.push(<option>Select A Cert</option>)\n        for (let cert of this.props.certs) {\n            certOptions.push(<option value={cert.keyPairName}>{cert.keyPairName}</option>)\n        }\n        return certOptions\n    }\n\n    async handleSubmit() {\n        if (this.state.attribute != \"Select An Attribute\" && this.state.value != \"\" && this.state.cert != \"Select A Cert\") {\n            createMyData(this.props.person, this.state.attribute, this.state.value, this.state.cert, (data) => {\n                this.props.refreshData()\n            })\n\n        } else {\n            alert(\"Fill out all the fields\")\n        }\n\n    }\n\n    handleToggle() {\n        if (this.props.toggleAddData) {\n            return <Container style={{ padding: \"1rem\", margin: \"1rem\", backgroundColor: \"white\", borderRadius: \".5rem\" }}>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>My Data Attribute</Form.Label>\n                        <Form.Select onChange={(event) => this.setState({ attribute: event.target.value })} aria-label=\"Select An Attribute\">\n                            {this.getAttributeList()}\n                        </Form.Select>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Value</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Value\" onChange={(event) => this.setState({ value: event.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Certificate</Form.Label>\n                        <Form.Select onChange={(event) => this.setState({ cert: event.target.value })} aria-label=\"Select A Cert\">\n                            {this.getCertList()}\n                        </Form.Select>\n                    </Form.Group>\n\n\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()} >\n                        Save\n                    </Button>\n                </Form>\n            </Container >\n        } else {\n            return \"\"\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.handleToggle()}\n            </div>\n        )\n    }\n}\n\nexport default CreateNewDataForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}