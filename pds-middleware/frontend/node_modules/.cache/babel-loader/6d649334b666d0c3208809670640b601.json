{"ast":null,"code":"function createNewRSAKeys(person,keyPairName,passphrase){var data={\"person\":person,\"keyPairName\":keyPairName.replace(/\\s/g,''),\"passphrase\":passphrase};fetch('/createWalletKeyPair',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(data)}).then(function(res){return res.text();}).then(function(data){console.log(data);}).catch(function(error){console.log(error);});}export default createNewRSAKeys;","map":{"version":3,"names":["createNewRSAKeys","person","keyPairName","passphrase","data","replace","fetch","method","headers","body","JSON","stringify","then","res","text","console","log","catch","error"],"sources":["/home/node/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.jsx"],"sourcesContent":["function createNewRSAKeys(person, keyPairName, passphrase) {\n    let data = {\n        \"person\": person,\n        \"keyPairName\": keyPairName.replace(/\\s/g, ''), \n        \"passphrase\": passphrase\n    }\n    fetch('/createWalletKeyPair', {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then(res => res.text()).then(data => {\n        console.log(data)\n    }).catch((error) => {\n        console.log(error)\n    })\n}\n\nexport default  createNewRSAKeys"],"mappings":"AAAA,QAASA,iBAAT,CAA0BC,MAA1B,CAAkCC,WAAlC,CAA+CC,UAA/C,CAA2D,CACvD,GAAIC,KAAI,CAAG,CACP,SAAUH,MADH,CAEP,cAAeC,WAAW,CAACG,OAAZ,CAAoB,KAApB,CAA2B,EAA3B,CAFR,CAGP,aAAcF,UAHP,CAAX,CAKAG,KAAK,CAAC,sBAAD,CAAyB,CAC1BC,MAAM,CAAE,MADkB,CAE1BC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAFiB,CAM1BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CANoB,CAAzB,CAAL,CAOGQ,IAPH,CAOQ,SAAAC,GAAG,QAAIA,IAAG,CAACC,IAAJ,EAAJ,EAPX,EAO2BF,IAP3B,CAOgC,SAAAR,IAAI,CAAI,CACpCW,OAAO,CAACC,GAAR,CAAYZ,IAAZ,EACH,CATD,EASGa,KATH,CASS,SAACC,KAAD,CAAW,CAChBH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACH,CAXD,EAYH,CAED,cAAgBlB,iBAAhB"},"metadata":{},"sourceType":"module"}