{"ast":null,"code":"import _regeneratorRuntime from\"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";function createNewRSAKeys(_x,_x2,_x3){return _createNewRSAKeys.apply(this,arguments);}function _createNewRSAKeys(){_createNewRSAKeys=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(person,keyPairName,passphrase){var data,res,resData;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:data={\"person\":person,\"keyPairName\":keyPairName.replace(/\\s/g,''),\"passphrase\":passphrase};_context.next=3;return fetchfetch('/api/createWalletKeyPair',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(data)});case 3:res=_context.sent;_context.next=6;return res.json();case 6:resData=_context.sent;return _context.abrupt(\"return\",resData);case 8:case\"end\":return _context.stop();}}},_callee);}));return _createNewRSAKeys.apply(this,arguments);}export default createNewRSAKeys;","map":{"version":3,"names":["createNewRSAKeys","person","keyPairName","passphrase","data","replace","fetchfetch","method","headers","body","JSON","stringify","res","json","resData"],"sources":["/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.jsx"],"sourcesContent":["async function createNewRSAKeys(person, keyPairName, passphrase) {\n    let data = {\n        \"person\": person,\n        \"keyPairName\": keyPairName.replace(/\\s/g, ''),\n        \"passphrase\": passphrase\n    }\n\n    const res = await fetchfetch('/api/createWalletKeyPair', {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    })\n\n    let resData = await res.json()\n    return resData\n}\n\nexport default createNewRSAKeys"],"mappings":"4TAAeA,iB,sKAAf,iBAAgCC,MAAhC,CAAwCC,WAAxC,CAAqDC,UAArD,yIACQC,IADR,CACe,CACP,SAAUH,MADH,CAEP,cAAeC,WAAW,CAACG,OAAZ,CAAoB,KAApB,CAA2B,EAA3B,CAFR,CAGP,aAAcF,UAHP,CADf,uBAOsBG,WAAU,CAAC,0BAAD,CAA6B,CACrDC,MAAM,CAAE,MAD6C,CAErDC,OAAO,CAAE,CACL,SAAU,kBADL,CAEL,eAAgB,kBAFX,CAF4C,CAMrDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAN+C,CAA7B,CAPhC,QAOUQ,GAPV,qCAgBwBA,IAAG,CAACC,IAAJ,EAhBxB,QAgBQC,OAhBR,+CAiBWA,OAjBX,wD,mDAoBA,cAAed,iBAAf"},"metadata":{},"sourceType":"module"}