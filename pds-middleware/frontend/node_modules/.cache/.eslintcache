[{"/home/node/pds-middleware/frontend/src/index.js":"1","/home/node/pds-middleware/frontend/src/pages/App.js":"2","/home/node/pds-middleware/frontend/src/components/data-cards/CertDataCard.js":"3","/home/node/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js":"4","/home/node/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js":"5","/home/node/pds-middleware/frontend/src/api-functions/my-data/readMyData.js":"6","/home/node/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js":"7","/home/node/pds-middleware/frontend/src/api-functions/my-data/readMappedAttributes.js":"8","/home/node/pds-middleware/frontend/src/api-functions/my-data/createNewUser.js":"9","/home/node/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js":"10","/home/node/pds-middleware/frontend/src/api-functions/my-data/createMyData.js":"11","/home/node/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js":"12","/home/node/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js":"13","/home/node/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js":"14"},{"size":444,"mtime":1657567806476,"results":"15","hashOfConfig":"16"},{"size":8800,"mtime":1657806236444,"results":"17","hashOfConfig":"16"},{"size":2211,"mtime":1657306695650,"results":"18","hashOfConfig":"16"},{"size":3205,"mtime":1657221341970,"results":"19","hashOfConfig":"16"},{"size":3397,"mtime":1657561433224,"results":"20","hashOfConfig":"16"},{"size":982,"mtime":1657553450483,"results":"21","hashOfConfig":"16"},{"size":5420,"mtime":1657803729366,"results":"22","hashOfConfig":"16"},{"size":298,"mtime":1657559557990,"results":"23","hashOfConfig":"16"},{"size":427,"mtime":1657554452064,"results":"24","hashOfConfig":"16"},{"size":262,"mtime":1657221042137,"results":"25","hashOfConfig":"16"},{"size":619,"mtime":1657561671509,"results":"26","hashOfConfig":"16"},{"size":590,"mtime":1657561660909,"results":"27","hashOfConfig":"16"},{"size":580,"mtime":1657194346866,"results":"28","hashOfConfig":"16"},{"size":655,"mtime":1657803133998,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k3nzlk",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/node/pds-middleware/frontend/src/index.js",[],[],"/home/node/pds-middleware/frontend/src/pages/App.js",["76"],[],"/home/node/pds-middleware/frontend/src/components/data-cards/CertDataCard.js",["77","78","79","80","81","82","83","84"],[],"import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\"\nimport Button from \"react-bootstrap/Button\"\nimport deleteMyData from \"../../api-functions/my-data/deleteMyData\";\nimport Modal from \"react-bootstrap/Modal\"\nimport Form from \"react-bootstrap/Form\"\nimport updateMyData from \"../../api-functions/my-data/updateMyData\";\nimport Image from \"react-bootstrap/Image\"\nimport lock from '../../assets/lock.png';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Stack from 'react-bootstrap/Stack';\n\n\n\n\nfunction ShowCredModal(props) {\n    const [show, setShow] = useState(false);\n    const [value, setValue] = useState(\"\")\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                View Public Key\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update {props.header}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                            <Form.Label>New {props.header}</Form.Label>\n\n                        </Form.Group>\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nclass CertDataCard extends React.Component {\n\n    render() {\n        return (\n            <Col >\n                <Card className=\"card\" border=\"warning\" style={{ width: '15rem', margin: \"1rem\" }}>\n                    <Card.Header>{this.props.header}</Card.Header>\n\n                    <Card.Body>\n\n                        <Card.Text>\n                            <ShowCredModal></ShowCredModal>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n    }\n\n\n}\n\nexport default CertDataCard","/home/node/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js",["85"],[],"import * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\nimport createNewRSAKeys from \"../../api-functions/my-creds/createNewRSAKey\";\nimport Alert from \"react-bootstrap/Alert\"\n\n\n\n\n\nclass CreateNewKeyPairForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            passwordsNotMatch: false,\n            keyPairName: \"\",\n            passphrase: \"\",\n            confirmPassphrase: \"-1\",\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.passwordsNotMatchAlert = this.passwordsNotMatchAlert.bind(this)\n    }\n\n    handleSubmit() {\n        if (this.state.passphrase === this.state.confirmPassphrase) {\n            this.setState({ passwordsNotMatch: false })\n            console.log(this.props.person, this.state.keyPairName, this.state.passphrase)\n            createNewRSAKeys(this.props.person, this.state.keyPairName, this.state.passphrase)\n        } else {\n            this.setState({ passwordsNotMatch: true })\n        }\n\n    }\n\n    passwordsNotMatchAlert() {\n        if (this.state.passwordsNotMatch) {\n            return (<Alert key={\"danger\"} variant={\"danger\"}>\n                The Passwords Do Not Match\n            </Alert>)\n        } else {\n            return \"\"\n        }\n    }\n\n    handleToggle() {\n        if (this.props.toggleAddKeyPair) {\n            return <Container style={{ padding: \"1rem\", margin: \"1rem\", backgroundColor: \"white\", borderRadius: \".5rem\" }}>\n                <Form>\n                    {this.passwordsNotMatchAlert()}\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Key Pair Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Key Pair Name\" onChange={(event) => this.setState({ keyPairName: event.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Passphrase Key Pair</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ passphrase: event.target.value })} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Confirm Passphrase</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ confirmPassphrase: event.target.value })} />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()} >\n                        Save\n                    </Button>\n                </Form>\n            </Container >\n        } else {\n            return \"\"\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.handleToggle()}\n            </div>\n\n\n        )\n    }\n}\n\nexport default CreateNewKeyPairForm","/home/node/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js",["86","87","88"],[],"import * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\n\n\n\n\nclass CreateNewDataForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            attribute: \"\",\n            value: \"\",\n            cert: \"\"\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n        this.getCertList = this.getCertList.bind(this)\n        this.getAttributeList = this.getAttributeList.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    getAttributeList() {\n        let attrOptions = []\n        attrOptions.push(<option>Select An Attribute</option>)\n        for (let attribute of this.props.attributes) {\n            attrOptions.push(<option value={attribute}>{attribute}</option>)\n        }\n        return attrOptions\n    }\n\n    getCertList() {\n        let certOptions = []\n        certOptions.push(<option>Select A Cert</option>)\n        for (let cert of this.props.certs) {\n            certOptions.push(<option value={cert.keyPairName}>{cert.keyPairName}</option>)\n        }\n        return certOptions\n    }\n\n    async handleSubmit() {\n        if (this.state.attribute != \"Select An Attribute\" && this.state.value != \"\" && this.state.cert != \"Select A Cert\") {\n            createMyData(this.props.person, this.state.attribute, this.state.value, this.state.cert, (data) => {\n                this.props.refreshData()\n            })\n\n        } else {\n            alert(\"Fill out all the fields\")\n        }\n\n    }\n\n    handleToggle() {\n        if (this.props.toggleAddData) {\n            return <Container style={{ padding: \"1rem\", margin: \"1rem\", backgroundColor: \"white\", borderRadius: \".5rem\" }}>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>My Data Attribute</Form.Label>\n                        <Form.Select onChange={(event) => this.setState({ attribute: event.target.value })} aria-label=\"Select An Attribute\">\n                            {this.getAttributeList()}\n                        </Form.Select>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Value</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Value\" onChange={(event) => this.setState({ value: event.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Certificate</Form.Label>\n                        <Form.Select onChange={(event) => this.setState({ cert: event.target.value })} aria-label=\"Select A Cert\">\n                            {this.getCertList()}\n                        </Form.Select>\n                    </Form.Group>\n\n\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()} >\n                        Save\n                    </Button>\n                </Form>\n            </Container >\n        } else {\n            return \"\"\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.handleToggle()}\n            </div>\n        )\n    }\n}\n\nexport default CreateNewDataForm","/home/node/pds-middleware/frontend/src/api-functions/my-data/readMyData.js",["89","90","91"],[],"async function readMyData() {\n    const res = await fetch('/readMyData', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n    })\n\n    let data = await res.json()\n    let parsedReults = []\n\n    if (data.length !== 0) {\n        parsedReults.push({ \"Person\": data[0].Person.value })\n        for (let result of data) {\n            let dataHeader = \"\"\n            for (let attribute in result) {\n                if (attribute != \"Person\" && attribute != \"keyPairName\" && attribute != \"Signature\") {\n                    dataHeader = attribute\n                }\n            }\n            parsedReults.push({\n                data: {\n                    attribute: dataHeader,\n                    value: result[dataHeader].value\n                },\n                signature: result.Signature.value,\n                keyPairName: result.keyPairName.value\n\n            })\n        }\n    }\n\n    return parsedReults\n}\n\nexport default readMyData","/home/node/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-data/readMappedAttributes.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-data/createNewUser.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-data/createMyData.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js",[],[],"/home/node/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":57,"column":20,"nodeType":"94","messageId":"95","endLine":57,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":20},{"ruleId":"96","severity":1,"message":"100","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":20},{"ruleId":"96","severity":1,"message":"101","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":13},{"ruleId":"96","severity":1,"message":"102","line":9,"column":8,"nodeType":"98","messageId":"99","endLine":9,"endColumn":12},{"ruleId":"96","severity":1,"message":"103","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":17},{"ruleId":"96","severity":1,"message":"104","line":12,"column":8,"nodeType":"98","messageId":"99","endLine":12,"endColumn":13},{"ruleId":"96","severity":1,"message":"105","line":19,"column":12,"nodeType":"98","messageId":"99","endLine":19,"endColumn":17},{"ruleId":"96","severity":1,"message":"106","line":19,"column":19,"nodeType":"98","messageId":"99","endLine":19,"endColumn":27},{"ruleId":"96","severity":1,"message":"107","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":44,"column":34,"nodeType":"94","messageId":"95","endLine":44,"endColumn":36},{"ruleId":"92","severity":1,"message":"93","line":44,"column":79,"nodeType":"94","messageId":"95","endLine":44,"endColumn":81},{"ruleId":"92","severity":1,"message":"93","line":44,"column":104,"nodeType":"94","messageId":"95","endLine":44,"endColumn":106},{"ruleId":"92","severity":1,"message":"93","line":17,"column":31,"nodeType":"94","messageId":"95","endLine":17,"endColumn":33},{"ruleId":"92","severity":1,"message":"93","line":17,"column":56,"nodeType":"94","messageId":"95","endLine":17,"endColumn":58},{"ruleId":"92","severity":1,"message":"93","line":17,"column":86,"nodeType":"94","messageId":"95","endLine":17,"endColumn":88},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'deleteMyData' is defined but never used.","Identifier","unusedVar","'updateMyData' is defined but never used.","'Image' is defined but never used.","'lock' is defined but never used.","'Container' is defined but never used.","'Stack' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'createMyData' is defined but never used."]