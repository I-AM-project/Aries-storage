[{"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/index.js":"1","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/App.js":"2","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js":"3","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/CertDataCard.js":"4","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js":"5","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js":"6","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.js":"7","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js":"8","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js":"9","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js":"10","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/createMyData.js":"11","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js":"12"},{"size":438,"mtime":1657194346866,"results":"13","hashOfConfig":"14"},{"size":7863,"mtime":1657304037514,"results":"15","hashOfConfig":"14"},{"size":5041,"mtime":1657307455018,"results":"16","hashOfConfig":"14"},{"size":2211,"mtime":1657306695650,"results":"17","hashOfConfig":"14"},{"size":2157,"mtime":1657221331610,"results":"18","hashOfConfig":"14"},{"size":3205,"mtime":1657221341970,"results":"19","hashOfConfig":"14"},{"size":900,"mtime":1657299084802,"results":"20","hashOfConfig":"14"},{"size":262,"mtime":1657221042137,"results":"21","hashOfConfig":"14"},{"size":525,"mtime":1657194346866,"results":"22","hashOfConfig":"14"},{"size":591,"mtime":1657278561062,"results":"23","hashOfConfig":"14"},{"size":555,"mtime":1657221403223,"results":"24","hashOfConfig":"14"},{"size":580,"mtime":1657194346866,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t39c39",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/index.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/App.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js",["65","66"],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/CertDataCard.js",["67","68","69","70","71","72","73","74"],[],"import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\"\nimport Button from \"react-bootstrap/Button\"\nimport deleteMyData from \"../../api-functions/my-data/deleteMyData\";\nimport Modal from \"react-bootstrap/Modal\"\nimport Form from \"react-bootstrap/Form\"\nimport updateMyData from \"../../api-functions/my-data/updateMyData\";\nimport Image from \"react-bootstrap/Image\"\nimport lock from '../../assets/lock.png';\nimport Container from \"react-bootstrap/Container\"\nimport Col from \"react-bootstrap/Col\"\nimport Stack from 'react-bootstrap/Stack';\n\n\n\n\nfunction ShowCredModal(props) {\n    const [show, setShow] = useState(false);\n    const [value, setValue] = useState(\"\")\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Button variant=\"primary\" onClick={handleShow}>\n                View Public Key\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update {props.header}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                            <Form.Label>New {props.header}</Form.Label>\n\n                        </Form.Group>\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nclass CertDataCard extends React.Component {\n\n    render() {\n        return (\n            <Col >\n                <Card className=\"card\" border=\"warning\" style={{ width: '15rem', margin: \"1rem\" }}>\n                    <Card.Header>{this.props.header}</Card.Header>\n\n                    <Card.Body>\n\n                        <Card.Text>\n                            <ShowCredModal></ShowCredModal>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n    }\n\n\n}\n\nexport default CertDataCard","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js",["75"],[],"import * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\nimport createNewRSAKeys from \"../../api-functions/my-creds/createNewRSAKey\";\nimport Alert from \"react-bootstrap/Alert\"\n\n\n\n\n\nclass CreateNewKeyPairForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            passwordsNotMatch: false,\n            keyPairName: \"\",\n            passphrase: \"\",\n            confirmPassphrase: \"-1\",\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.passwordsNotMatchAlert = this.passwordsNotMatchAlert.bind(this)\n    }\n\n    handleSubmit() {\n        if (this.state.passphrase === this.state.confirmPassphrase) {\n            this.setState({ passwordsNotMatch: false })\n            console.log(this.props.person, this.state.keyPairName, this.state.passphrase)\n            createNewRSAKeys(this.props.person, this.state.keyPairName, this.state.passphrase)\n        } else {\n            this.setState({ passwordsNotMatch: true })\n        }\n\n    }\n\n    passwordsNotMatchAlert() {\n        if (this.state.passwordsNotMatch) {\n            return (<Alert key={\"danger\"} variant={\"danger\"}>\n                The Passwords Do Not Match\n            </Alert>)\n        } else {\n            return \"\"\n        }\n    }\n\n    handleToggle() {\n        if (this.props.toggleAddKeyPair) {\n            return <Container style={{ padding: \"1rem\", margin: \"1rem\", backgroundColor: \"white\", borderRadius: \".5rem\" }}>\n                <Form>\n                    {this.passwordsNotMatchAlert()}\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Key Pair Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Key Pair Name\" onChange={(event) => this.setState({ keyPairName: event.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Passphrase Key Pair</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ passphrase: event.target.value })} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Confirm Passphrase</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ confirmPassphrase: event.target.value })} />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()} >\n                        Save\n                    </Button>\n                </Form>\n            </Container >\n        } else {\n            return \"\"\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.handleToggle()}\n            </div>\n\n\n        )\n    }\n}\n\nexport default CreateNewKeyPairForm","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.js",["76","77","78"],[],"async function readMyData() {\n    const res = await fetch('/readMyData', {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n    })\n\n    let data = await res.json()\n    let parsedReults = []\n    // parsedReults.push({ \"Person\": data[0][Object.keys(data[0])[0]].value })\n    for (let result of data) {\n        let dataHeader = \"\"\n        for (let attribute in result) {\n            if (attribute != \"Person\" && attribute != \"keyPairName\" && attribute != \"Signature\") {\n                dataHeader = attribute\n            }\n        }\n\n\n        parsedReults.push({\n            data: {\n                attribute: dataHeader,\n                value: result[dataHeader].value\n            },\n            signature: result.Signature.value,\n            keyPairName: result.keyPairName.value\n\n        })\n    }\n    return parsedReults\n}\n\nexport default readMyData","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/createMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js",[],[],{"ruleId":"79","severity":1,"message":"80","line":29,"column":13,"nodeType":"81","messageId":"82","endLine":29,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":119,"column":5,"nodeType":"85","messageId":"86","endLine":121,"endColumn":6},{"ruleId":"79","severity":1,"message":"87","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":20},{"ruleId":"79","severity":1,"message":"88","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":20},{"ruleId":"79","severity":1,"message":"89","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":13},{"ruleId":"79","severity":1,"message":"90","line":9,"column":8,"nodeType":"81","messageId":"82","endLine":9,"endColumn":12},{"ruleId":"79","severity":1,"message":"91","line":10,"column":8,"nodeType":"81","messageId":"82","endLine":10,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":12,"column":8,"nodeType":"81","messageId":"82","endLine":12,"endColumn":13},{"ruleId":"79","severity":1,"message":"93","line":19,"column":12,"nodeType":"81","messageId":"82","endLine":19,"endColumn":17},{"ruleId":"79","severity":1,"message":"94","line":19,"column":19,"nodeType":"81","messageId":"82","endLine":19,"endColumn":27},{"ruleId":"79","severity":1,"message":"95","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":20},{"ruleId":"96","severity":1,"message":"97","line":15,"column":27,"nodeType":"98","messageId":"99","endLine":15,"endColumn":29},{"ruleId":"96","severity":1,"message":"97","line":15,"column":52,"nodeType":"98","messageId":"99","endLine":15,"endColumn":54},{"ruleId":"96","severity":1,"message":"97","line":15,"column":82,"nodeType":"98","messageId":"99","endLine":15,"endColumn":84},"no-unused-vars","'updateData' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'deleteMyData' is defined but never used.","'updateMyData' is defined but never used.","'Image' is defined but never used.","'lock' is defined but never used.","'Container' is defined but never used.","'Stack' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'createMyData' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]