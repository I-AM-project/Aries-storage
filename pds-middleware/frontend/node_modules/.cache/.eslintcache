[{"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/index.js":"1","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/App.js":"2","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js":"3","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.js":"4","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/CertDataCard.js":"5","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js":"6","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js":"7","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js":"8","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js":"9","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js":"10","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/createMyData.js":"11","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js":"12"},{"size":438,"mtime":1657194346866,"results":"13","hashOfConfig":"14"},{"size":7595,"mtime":1657221056921,"results":"15","hashOfConfig":"14"},{"size":3369,"mtime":1657224084828,"results":"16","hashOfConfig":"14"},{"size":500,"mtime":1657216423317,"results":"17","hashOfConfig":"14"},{"size":653,"mtime":1657194346862,"results":"18","hashOfConfig":"14"},{"size":2157,"mtime":1657221331610,"results":"19","hashOfConfig":"14"},{"size":3205,"mtime":1657221341970,"results":"20","hashOfConfig":"14"},{"size":262,"mtime":1657221042137,"results":"21","hashOfConfig":"14"},{"size":525,"mtime":1657194346866,"results":"22","hashOfConfig":"14"},{"size":580,"mtime":1657194346866,"results":"23","hashOfConfig":"14"},{"size":555,"mtime":1657221403223,"results":"24","hashOfConfig":"14"},{"size":539,"mtime":1657223968356,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t39c39",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/index.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/App.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js",["63","64"],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/CertDataCard.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js",["65"],[],"import * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\nimport createNewRSAKeys from \"../../api-functions/my-creds/createNewRSAKey\";\nimport Alert from \"react-bootstrap/Alert\"\n\n\n\n\n\nclass CreateNewKeyPairForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            passwordsNotMatch: false,\n            keyPairName: \"\",\n            passphrase: \"\",\n            confirmPassphrase: \"-1\",\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.passwordsNotMatchAlert = this.passwordsNotMatchAlert.bind(this)\n    }\n\n    handleSubmit() {\n        if (this.state.passphrase === this.state.confirmPassphrase) {\n            this.setState({ passwordsNotMatch: false })\n            console.log(this.props.person, this.state.keyPairName, this.state.passphrase)\n            createNewRSAKeys(this.props.person, this.state.keyPairName, this.state.passphrase)\n        } else {\n            this.setState({ passwordsNotMatch: true })\n        }\n\n    }\n\n    passwordsNotMatchAlert() {\n        if (this.state.passwordsNotMatch) {\n            return (<Alert key={\"danger\"} variant={\"danger\"}>\n                The Passwords Do Not Match\n            </Alert>)\n        } else {\n            return \"\"\n        }\n    }\n\n    handleToggle() {\n        if (this.props.toggleAddKeyPair) {\n            return <Container style={{ padding: \"1rem\", margin: \"1rem\", backgroundColor: \"white\", borderRadius: \".5rem\" }}>\n                <Form>\n                    {this.passwordsNotMatchAlert()}\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Key Pair Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Key Pair Name\" onChange={(event) => this.setState({ keyPairName: event.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Passphrase Key Pair</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ passphrase: event.target.value })} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Confirm Passphrase</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ confirmPassphrase: event.target.value })} />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()} >\n                        Save\n                    </Button>\n                </Form>\n            </Container >\n        } else {\n            return \"\"\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.handleToggle()}\n            </div>\n\n\n        )\n    }\n}\n\nexport default CreateNewKeyPairForm","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/createMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js",[],[],{"ruleId":"66","severity":1,"message":"67","line":24,"column":13,"nodeType":"68","messageId":"69","endLine":24,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":70,"column":5,"nodeType":"72","messageId":"73","endLine":72,"endColumn":6},{"ruleId":"66","severity":1,"message":"74","line":5,"column":8,"nodeType":"68","messageId":"69","endLine":5,"endColumn":20},"no-unused-vars","'updateData' is assigned a value but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'createMyData' is defined but never used."]