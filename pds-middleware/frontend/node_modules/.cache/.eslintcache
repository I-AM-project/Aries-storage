[{"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/index.js":"1","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/App.js":"2","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/CertDataCard.js":"3","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js":"4","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js":"5","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.js":"6","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js":"7","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js":"8","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/createMyData.js":"9","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js":"10","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js":"11","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js":"12"},{"size":438,"mtime":1657194346866,"results":"13","hashOfConfig":"14"},{"size":7595,"mtime":1657221056921,"results":"15","hashOfConfig":"14"},{"size":653,"mtime":1657194346862,"results":"16","hashOfConfig":"14"},{"size":2157,"mtime":1657221331610,"results":"17","hashOfConfig":"14"},{"size":3205,"mtime":1657221341970,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1657216423317,"results":"19","hashOfConfig":"14"},{"size":3388,"mtime":1657278436937,"results":"20","hashOfConfig":"14"},{"size":262,"mtime":1657221042137,"results":"21","hashOfConfig":"14"},{"size":555,"mtime":1657221403223,"results":"22","hashOfConfig":"14"},{"size":580,"mtime":1657194346866,"results":"23","hashOfConfig":"14"},{"size":525,"mtime":1657194346866,"results":"24","hashOfConfig":"14"},{"size":591,"mtime":1657278561062,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t39c39",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/index.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/App.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/CertDataCard.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewDataForm.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-forms/CreateNewKeyPairForm.js",["64"],[],"import * as React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport createMyData from \"../../api-functions/my-data/createMyData\";\nimport createNewRSAKeys from \"../../api-functions/my-creds/createNewRSAKey\";\nimport Alert from \"react-bootstrap/Alert\"\n\n\n\n\n\nclass CreateNewKeyPairForm extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            passwordsNotMatch: false,\n            keyPairName: \"\",\n            passphrase: \"\",\n            confirmPassphrase: \"-1\",\n        }\n        this.handleToggle = this.handleToggle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.passwordsNotMatchAlert = this.passwordsNotMatchAlert.bind(this)\n    }\n\n    handleSubmit() {\n        if (this.state.passphrase === this.state.confirmPassphrase) {\n            this.setState({ passwordsNotMatch: false })\n            console.log(this.props.person, this.state.keyPairName, this.state.passphrase)\n            createNewRSAKeys(this.props.person, this.state.keyPairName, this.state.passphrase)\n        } else {\n            this.setState({ passwordsNotMatch: true })\n        }\n\n    }\n\n    passwordsNotMatchAlert() {\n        if (this.state.passwordsNotMatch) {\n            return (<Alert key={\"danger\"} variant={\"danger\"}>\n                The Passwords Do Not Match\n            </Alert>)\n        } else {\n            return \"\"\n        }\n    }\n\n    handleToggle() {\n        if (this.props.toggleAddKeyPair) {\n            return <Container style={{ padding: \"1rem\", margin: \"1rem\", backgroundColor: \"white\", borderRadius: \".5rem\" }}>\n                <Form>\n                    {this.passwordsNotMatchAlert()}\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Key Pair Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Key Pair Name\" onChange={(event) => this.setState({ keyPairName: event.target.value })} />\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Passphrase Key Pair</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ passphrase: event.target.value })} />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Confirm Passphrase</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Enter Passphrase\" onChange={(event) => this.setState({ confirmPassphrase: event.target.value })} />\n                    </Form.Group>\n                    <Button variant=\"primary\" onClick={() => this.handleSubmit()} >\n                        Save\n                    </Button>\n                </Form>\n            </Container >\n        } else {\n            return \"\"\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.handleToggle()}\n            </div>\n\n\n        )\n    }\n}\n\nexport default CreateNewKeyPairForm","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/readMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/components/data-cards/PersonalDataCard.js",["65","66"],[],"import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\nimport deleteMyData from \"../../api-functions/my-data/deleteMyData\";\nimport Modal from \"react-bootstrap/Modal\"\nimport Form from \"react-bootstrap/Form\"\nimport updateMyData from \"../../api-functions/my-data/updateMyData\";\n\n\nimport \"../../css/PersonalDataCard.css\"\n\nfunction UpdateModal(props) {\n    const [show, setShow] = useState(false);\n    const [value, setValue] = useState(\"\")\n\n\n    const handleChange = (event) => {\n        const valueNew = event.target.value;\n        setValue(valueNew)\n    };\n\n    const handleSave = () => {\n        let updateData = {\n            person: props.person,\n            header: props.header,\n            newValue: value\n        }\n        updateMyData(props.person, props.header, value, props.oldValue)\n    }\n\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <>\n            <Button variant=\"primary\" style={{ float: \"right\" }} onClick={handleShow}>\n                Edit\n            </Button>\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Update {props.header}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                            <Form.Label>New {props.header}</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Enter New Value\" onChange={(event) => handleChange(event)} />\n                        </Form.Group>\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSave}>\n                        Save Changes\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\n\nclass PersonalDataCard extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return (\n            <>\n                <Col >\n                    <div>\n                        <Card className=\"card\" border=\"warning\" style={{ width: '15rem', margin: \"1rem\" }}>\n                            <Card.Header>{this.props.header}</Card.Header>\n\n                            <Card.Body>\n                                <Card.Title>{this.props.value}</Card.Title>\n                                <Card.Text>\n                                    Self-Signed Cert\n                                </Card.Text>\n                                <Button variant=\"danger\" style={{ float: \"left\" }} onClick={() => deleteMyData(this.props.person, this.props.header, this.props.value)} >\n                                    Delete\n                                </Button>\n                                <UpdateModal person={this.props.person} header={this.props.header} oldValue={this.props.value}></UpdateModal>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </Col >\n\n            </>\n\n\n        )\n    }\n}\n\nexport default PersonalDataCard","/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/readMyCerts.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/createMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-creds/createNewRSAKey.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/deleteMyData.js",[],[],"/home/ubuntu/Documents/Aries-storage/pds-middleware/frontend/src/api-functions/my-data/updateMyData.js",[],[],{"ruleId":"67","severity":1,"message":"68","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":20},{"ruleId":"67","severity":1,"message":"71","line":24,"column":13,"nodeType":"69","messageId":"70","endLine":24,"endColumn":23},{"ruleId":"72","severity":1,"message":"73","line":70,"column":5,"nodeType":"74","messageId":"75","endLine":72,"endColumn":6},"no-unused-vars","'createMyData' is defined but never used.","Identifier","unusedVar","'updateData' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor"]